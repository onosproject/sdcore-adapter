// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/onosproject/sdcore-adapter/pkg/synchronizer (interfaces: PusherInterface)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockPusherInterface is a mock of PusherInterface interface.
type MockPusherInterface struct {
	ctrl     *gomock.Controller
	recorder *MockPusherInterfaceMockRecorder
}

// MockPusherInterfaceMockRecorder is the mock recorder for MockPusherInterface.
type MockPusherInterfaceMockRecorder struct {
	mock *MockPusherInterface
}

// NewMockPusherInterface creates a new mock instance.
func NewMockPusherInterface(ctrl *gomock.Controller) *MockPusherInterface {
	mock := &MockPusherInterface{ctrl: ctrl}
	mock.recorder = &MockPusherInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPusherInterface) EXPECT() *MockPusherInterfaceMockRecorder {
	return m.recorder
}

// PushUpdate mocks base method.
func (m *MockPusherInterface) PushUpdate(arg0 string, arg1 []byte) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PushUpdate", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// PushUpdate mocks base method.
func (m *MockPusherInterface) PushDelete(arg0 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PushDelete", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// PushUpdate indicates an expected call of PushUpdate.
func (mr *MockPusherInterfaceMockRecorder) PushUpdate(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PushUpdate", reflect.TypeOf((*MockPusherInterface)(nil).PushUpdate), arg0, arg1)
}
